---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: proxy-gateway
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: https
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: proxy
spec:
  hosts:
  - "*"
  gateways:
  - proxy-gateway
  http:
    - match:
      - headers:
          cookie:
            regex: ^(.\*?;)?(node=green)(;.\*)?$
      route:
      - destination:
          host: proxy
          subset: v1
    - match:
      - headers:
          cookie:
            regex: ^(.\*?;)?(node=blue)(;.\*)?$
      route:
      - destination:
          host: proxy
          subset: v2
    - route:
      - destination:
          host: proxy
          subset: v1
        weight: 50
      - destination:
          host: proxy
          subset: v2
        weight: 50
      
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: proxy-destination-rule
spec:
  host: proxy
  # trafficPolicy:
  #   loadBalancer:
  #     consistentHash:
  #       useSourceIp: true
  #       httpQueryParameterName: hashable
  subsets:
  - name: v1
    labels:
      version: v1
  - name: v2
    labels:
      version: v2
---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  labels:
    app: proxy
spec:
  selector:
    app: proxy
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
      version: v1
  template:
    metadata:
      labels:
        app: proxy
        version: v1
    spec:
      containers:
      - name: proxy
        image: localhost:5000/reverse-proxy:1.0.0
        args:
          - "-listen=:80"
          - "-address=http://myapp-v1:8080"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
      version: v2
  template:
    metadata:
      labels:
        app: proxy
        version: v2
    spec:
      containers:
      - name: proxy
        image: localhost:5000/reverse-proxy:1.0.0
        args:
          - "-listen=:80"
          - "-address=http://myapp-v2:8080"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: myapp-v1
  labels:
    app: myapp-v1
spec:
  selector:
    app: myapp
    version: v1
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: myapp-v2
  labels:
    app: myapp-v2
spec:
  selector:
    app: myapp
    version: v2
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-v1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
      version: v1
  template:
    metadata:
      labels:
        app: myapp
        version: v1
    spec:
      containers:
      - name: myapp
        image: localhost:5000/echo-service:1.0.3
        args:
          - "-text=Hello from v1"
          - "-node=green"
          - "-listen=:8080"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp-v2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
      version: v2
  template:
    metadata:
      labels:
        app: myapp
        version: v2
    spec:
      containers:
      - name: myapp
        image: localhost:5000/echo-service:1.0.8
        args:
        - "-text=Hello from v2"
        - "-node=blue"
        - "-listen=:8080"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
